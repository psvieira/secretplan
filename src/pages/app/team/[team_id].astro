
---
import Layout from '@layouts/LayoutApp.astro'

import ProjectCard from '@components/app/projects/ProjectCard.astro'

import { getTeam, userIsTeamOwner, getProjects } from '@data/pocketbase'

import AddNewProjectCard from '@components/app/projects/AddNewProjectCard.astro'

import TasksList from '@components/app/tasks/TasksList.astro'

import IconDelete from '@components/app/icons/IconDelete.astro'

import IconCog from '@components/app/icons/IconCog.astro'

const { team_id = '' } = Astro.params

const projects = await getProjects({ team_id })

let team
try {
  team = await getTeam(team_id)
} catch (e) {
  return Astro.redirect('/app/dashboard')
}

const is_owner = await userIsTeamOwner(team_id)

import HamburgerMenuButton from '@components/app/HamburgerMenuButton.astro'
---

<Layout title='SECRETPLAN'>
  <div class='mx-auto space-y-6 text-white max-w-7xl'>
    <div
      class='rounded-lg bg-zinc-900 px-5 py-4 sm:py-2.5 text-xl sm:text-2xl md:text-3xl text-white uppercase text-center font-extrabold font-rounded'>
      <div class='sm:hidden'>
        <HamburgerMenuButton />
      </div>

      <span
        hx-get=`/app/modals/team/${team.id}/edit`
        hx-target='dialog'>{team.name}</span
      >
    </div>

    {
      team.status === 'freezed' && (
        <>
          <div class='p-10 mt-0 text-white rounded-lg shadow bg-zinc-800'>
            Your team is freezed as the subscription got
            cancelled.
            {is_owner && (
              <p>
                <a
                  hx-post={`/app/api/team/${team_id}/activate`}
                  hx-swap='none'
                  class='underline cursor-pointer'>
                  Reactivate the team now
                </a>{' '}
                to access the projects.
              </p>
            )}
          </div>
          <div class='space-y-6'>
            <ul class='grid gap-6 sm:grid-cols-2'>
              {projects.map(project => (
                <ProjectCard
                  project={project}
                  freezed={true}
                />
              ))}
            </ul>
          </div>
        </>
      )
    }

    {
      team.status === 'inactive' && is_owner && (
        <>
          <div class='p-10 mt-0 text-white rounded-lg shadow bg-zinc-800'>
            <button
              hx-post={`/app/api/team/${team_id}/activate`}
              hx-swap='none'
              class='block mx-auto underline'>
              Activate the team now
            </button>
          </div>
          <div class='p-10 mt-10 text-white rounded-lg shadow bg-zinc-800'>
            <h2 class='pb-0 font-black text-center uppercase'>
              Danger zone
            </h2>
            <div class='grid grid-cols-1 '>
              <button
                hx-delete={`/app/api/team/${team_id}`}
                hx-confirm='Are you sure?'
                type='button'
                class='inline-flex items-center gap-2 px-3 py-2 mt-5 mr-2 text-sm font-medium leading-4 text-left text-white border border-transparent rounded-md shadow-sm bg-zinc-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'>
                <IconDelete />
                Delete team
              </button>
            </div>
          </div>
        </>
      )
    }

    {
      team.status === 'active' && (
        <>
          <div id='starred-tasks-list'>
            <TasksList starred={true} team_id={team_id} />
          </div>
          <div class='space-y-6'>
            <ul class='grid gap-6 sm:grid-cols-2'>
              {projects.map(project => (
                <ProjectCard project={project} />
              ))}
            </ul>
            <AddNewProjectCard team_id={team_id} />
          </div>

          { is_owner && (
            <div class='text-white rounded-lg border dark:border-0 bg-zinc-100 dark:bg-zinc-800'>
              <div class='flex items-center justify-between w-full p-6 space-x-6 text-center'>
                <div class='flex-1 mx-auto'>
                  <a
                    href={`/app/team/${team_id}/settings`}
                    class='inline-flex items-center px-3 py-2  mr-2 text-sm font-medium text-left text-white border border-transparent leading-4 bg-zinc-600 rounded-md shadow-sm hover:bg-zinc-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-zinc-500 gap-2'>
                    <IconCog />
                    Settings
                  </a>
                </div>
              </div>
           </div>
          )}
        </>
      )
    }
  </div>
</Layout>
